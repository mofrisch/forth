Dies ist gforth.info, hergestellt von Makeinfo Version 4.8 aus
gforth.texi.

   This manual is for Gforth (version 0.7.9_20200716, February 8, 2018),
a fast and portable implementation of the Standard Forth language.  It
serves as reference manual, but it also contains an introduction to
Forth and a Forth tutorial.

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright (C) 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019 Free Software
Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being "A GNU Manual," and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     "GNU Free Documentation License."

     (a) The FSF's Back-Cover Text is: "You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by
     the Free Software Foundation raise funds for GNU development."

INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).             A fast interpreter for the Forth language.
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1356
gforth.info-2: 299723
gforth.info-3: 599394
gforth.info-4: 846361

Tag Table:
(Indirect)
Node: Top1356
Node: Goals15361
Ref: Goals-Footnote-116882
Node: Gforth Environment17001
Node: Invoking Gforth17768
Node: Leaving Gforth26876
Node: Help on Gforth27382
Node: Command-line editing28108
Ref: Command-line editing-Footnote-130395
Node: Environment variables30451
Node: Gforth Files32138
Node: Gforth in pipes32932
Node: Startup speed34741
Node: Tutorial38105
Node: Starting Gforth Tutorial40421
Node: Syntax Tutorial40825
Node: Crash Course Tutorial41705
Node: Stack Tutorial42548
Node: Arithmetics Tutorial43202
Ref: Arithmetics Tutorial-Footnote-144192
Node: Stack Manipulation Tutorial44273
Node: Using files for Forth code Tutorial45714
Node: Comments Tutorial47240
Ref: Comments Tutorial-Footnote-148310
Node: Colon Definitions Tutorial48373
Node: Decompilation Tutorial49473
Node: Stack-Effect Comments Tutorial50005
Node: Types Tutorial53112
Node: Factoring Tutorial54885
Node: Designing the stack effect Tutorial56050
Node: Local Variables Tutorial58606
Node: Conditional execution Tutorial59996
Node: Flags and Comparisons Tutorial61311
Node: General Loops Tutorial63934
Node: Counted loops Tutorial65905
Node: Recursion Tutorial67259
Node: Leaving definitions or loops Tutorial68268
Node: Return Stack Tutorial68977
Node: Memory Tutorial70831
Node: Characters and Strings Tutorial73604
Node: Alignment Tutorial75127
Node: Floating Point Tutorial76300
Node: Files Tutorial79759
Node: Interpretation and Compilation Semantics and Immediacy Tutorial82992
Node: Execution Tokens Tutorial85530
Node: Exceptions Tutorial88600
Node: Defining Words Tutorial90410
Node: Arrays and Records Tutorial93203
Node: POSTPONE Tutorial94577
Node: Literal Tutorial96478
Node: Advanced macros Tutorial97339
Node: Compilation Tokens Tutorial99699
Node: Wordlists and Search Order Tutorial100861
Node: Introduction103604
Node: Introducing the Text Interpreter105680
Ref: Introducing the Text Interpreter-Footnote-1110771
Node: Stacks and Postfix notation110853
Node: Your first definition119864
Ref: Your first definition-Footnote-1123306
Node: How does that work?123467
Node: Forth is written in Forth132351
Ref: Forth is written in Forth-Footnote-1134083
Ref: Forth is written in Forth-Footnote-2134171
Node: Review - elements of a Forth system134221
Node: Where to go next136028
Node: Exercises137713
Node: Words138020
Node: Notation138780
Node: Case insensitivity142193
Node: Comments143515
Node: Boolean Flags144730
Node: Arithmetic145409
Node: Single precision146389
Node: Double precision147460
Node: Mixed precision148800
Node: Integer division149110
Node: Two-stage integer division155323
Node: Bitwise operations160564
Node: Numeric comparison161594
Node: Floating Point164299
Ref: Floating Point-Footnote-1169614
Node: Stack Manipulation169795
Node: Data stack170445
Node: Floating point stack171873
Node: Return stack172719
Node: Locals stack173722
Node: Stack pointer manipulation174014
Node: Memory175085
Node: Memory model175504
Ref: Memory model-Footnote-1176721
Node: Dictionary allocation176933
Node: Heap Allocation180357
Node: Memory Access182088
Node: Address arithmetic184325
Node: Memory Blocks188575
Node: Control Structures192035
Ref: Control Structures-Footnote-1192727
Node: Selection192840
Node: Simple Loops195670
Node: Counted Loops196387
Ref: Counted Loops-Footnote-1200508
Node: BEGIN loops with multiple exits200553
Node: General control structures with CASE202527
Ref: General control structures with CASE-Footnote-1205365
Node: Arbitrary control structures205487
Node: Calls and returns214009
Node: Exception Handling215959
Node: Defining Words224816
Node: CREATE225550
Node: Variables227684
Node: Constants229520
Ref: Constants-Footnote-1232591
Node: Values232699
Node: Colon Definitions233688
Node: Anonymous Definitions234403
Node: Quotations235941
Node: Supplying names237125
Node: User-defined Defining Words237789
Ref: User-defined Defining Words-Footnote-1244218
Ref: User-defined Defining Words-Footnote-2244497
Ref: User-defined Defining Words-Footnote-3244564
Node: CREATE..DOES> applications244731
Node: CREATE..DOES> details246091
Node: Advanced does> usage example247742
Node: Const-does>252175
Node: Deferred Words253363
Node: Forward257361
Node: Aliases257777
Node: Interpretation and Compilation Semantics259158
Ref: Interpretation and Compilation Semantics-Footnote-1261407
Ref: Interpretation and Compilation Semantics-Footnote-2261477
Node: Combined words261702
Ref: state-smartness263270
Ref: Combined words-Footnote-1265667
Node: Tokens for Words265870
Node: Execution token266331
Node: Compilation token268768
Ref: Compilation token-Footnote-1270352
Node: Name token270567
Node: Compiling words273422
Node: Literals274122
Node: Macros277116
Ref: Macros-Footnote-1283811
Node: The Text Interpreter284017
Ref: The Text Interpreter-Footnote-1289968
Ref: The Text Interpreter-Footnote-2290065
Ref: The Text Interpreter-Footnote-3290264
Ref: The Text Interpreter-Footnote-4290422
Ref: The Text Interpreter-Footnote-5290462
Node: Input Sources290548
Node: Number Conversion292915
Ref: Number Conversion-Footnote-1298382
Ref: Number Conversion-Footnote-2298488
Node: Interpret/Compile states298872
Node: Interpreter Directives299723
Node: Recognizers302908
Node: The Input Stream304477
Node: Word Lists308363
Node: Vocabularies315266
Node: Why use word lists?316489
Node: Word list example319000
Node: Environmental Queries319700
Node: Files323303
Node: Forth source files323853
Node: General files326992
Node: Redirection330193
Node: Directories331635
Node: Search Paths333809
Node: Source Search Paths335363
Node: General Search Paths335888
Node: Blocks337389
Ref: Blocks-Footnote-1347286
Node: Other I/O347668
Node: Simple numeric output348322
Node: Formatted numeric output353869
Node: String Formats360421
Node: Displaying characters and strings361456
Node: String words367547
Node: Terminal output373074
Node: Single-key input374683
Node: Line input and conversion379958
Node: Pipes383559
Node: Xchars and Unicode384522
Node: OS command line arguments388956
Node: Locals391143
Node: Gforth locals391866
Node: Where are locals visible by name?394799
Ref: Where are locals visible by name?-Footnote-1400967
Node: How long do locals live?401066
Node: Locals programming style401924
Node: Locals implementation404562
Node: Closures410877
Node: Standard Forth locals414768
Node: Structures417403
Node: Why explicit structure support?418240
Node: Structure Usage420745
Ref: Structure Usage-Footnote-1423635
Node: Structure Naming Convention423918
Node: Structure Implementation425078
Node: Structure Glossary426378
Node: Forth200x Structures428531
Node: Object-oriented Forth429885
Node: Why object-oriented programming?430598
Node: Object-Oriented Terminology431927
Node: Objects433768
Node: Properties of the Objects model434897
Node: Basic Objects Usage436654
Node: The Objects base class438948
Node: Creating objects439419
Node: Object-Oriented Programming Style440181
Node: Class Binding441167
Node: Method conveniences443361
Ref: Method conveniences-Footnote-1445410
Node: Classes and Scoping445592
Node: Dividing classes447024
Node: Object Interfaces448256
Node: Objects Implementation450236
Ref: Objects Implementation-Footnote-1454906
Node: Objects Glossary454984
Node: OOF461893
Node: Properties of the OOF model462585
Node: Basic OOF Usage463611
Node: The OOF base class465812
Node: Class Declaration469014
Node: Class Implementation470145
Node: Mini-OOF470292
Node: Basic Mini-OOF Usage470793
Node: Mini-OOF Example472089
Node: Mini-OOF Implementation473594
Node: Comparison with other object models477588
Ref: Comparison with other object models-Footnote-1481178
Node: Programming Tools481332
Node: Locating source code definitions482149
Node: Locating documentation484852
Node: Locating uses of a word485594
Node: Locating exception source487289
Node: Examining compiled code487622
Node: Examining data488957
Node: Forgetting words490585
Node: Debugging491929
Node: Assertions495345
Node: Singlestep Debugger498700
Node: Code Coverage501024
Node: Multitasker503122
Node: Pthreads503686
Node: C Interface511287
Node: Calling C Functions511967
Ref: Calling C Functions-Footnote-1514463
Node: Declaring C Functions514675
Node: Calling C function pointers518223
Node: Defining library interfaces519744
Node: Declaring OS-level libraries522471
Node: Callbacks524472
Node: C interface internals525807
Node: Low-Level C Interface Words527131
Node: Migrating the C interface from earlier Gforth527866
Node: Assembler and Code Words528486
Node: Assembler Definitions529180
Node: Common Assembler535729
Node: Common Disassembler538318
Node: 386 Assembler539974
Node: AMD64 Assembler544245
Node: Alpha Assembler546476
Node: MIPS assembler547387
Node: PowerPC assembler550658
Node: ARM Assembler551646
Node: Other assemblers556427
Node: Threading Words557719
Node: Passing Commands to the OS561762
Node: Keeping track of Time563119
Node: Miscellaneous Words564047
Node: Error messages564637
Node: Tools567578
Node: Standard Report567885
Node: Stack depth changes569731
Node: Standard conformance571692
Node: The Core Words574547
Node: core-idef574907
Node: core-ambcond582959
Node: core-other592180
Node: The optional Block word set593466
Node: block-idef593867
Node: block-ambcond594287
Node: block-other595206
Node: The optional Double Number word set595568
Node: double-ambcond595880
Node: The optional Exception word set596151
Node: exception-idef596468
Node: The optional Facility word set597174
Node: facility-idef597540
Node: facility-ambcond598623
Node: The optional File-Access word set599017
Node: file-idef599394
Node: file-ambcond601672
Node: The optional Floating-Point word set602937
Node: floating-idef603318
Node: floating-ambcond604433
Node: The optional Locals word set607416
Node: locals-idef607787
Node: locals-ambcond608324
Node: The optional Memory-Allocation word set608808
Node: memory-idef609151
Node: The optional Programming-Tools word set609612
Node: programming-idef610016
Node: programming-ambcond610905
Node: The optional Search-Order word set612167
Node: search-idef612513
Node: search-ambcond612883
Node: Standard vs Extensions613617
Node: Model616925
Node: Integrating Gforth617156
Node: Emacs and Gforth620718
Node: Installing gforth.el622547
Node: Emacs Tags623326
Node: Hilighting624196
Node: Auto-Indentation626017
Node: Blocks Files627385
Node: Image Files628741
Node: Image Licensing Issues629520
Node: Image File Background630694
Ref: Image File Background-Footnote-1634899
Node: Non-Relocatable Image Files635015
Node: Data-Relocatable Image Files635992
Node: Fully Relocatable Image Files636884
Node: gforthmi637748
Node: cross.fs640400
Node: Stack and Dictionary Sizes641086
Node: Running Image Files642159
Ref: Running Image Files-Footnote-1645021
Node: Modifying the Startup Sequence645385
Node: Engine647488
Node: Portability648212
Node: Threading650859
Node: Scheduling652042
Node: Direct or Indirect Threaded?653794
Node: Dynamic Superinstructions656575
Node: DOES>660559
Node: Primitives661625
Node: Automatic Generation661823
Ref: Automatic Generation-Footnote-1665267
Node: TOS Optimization665438
Node: Produced code668063
Node: Performance668470
Node: Cross Compiler673791
Node: Using the Cross Compiler674303
Node: How the Cross Compiler Works678867
Node: Bugs679048
Node: Origin680072
Node: Forth-related information683199
Node: Licenses683790
Node: GNU Free Documentation License684072
Node: Copying706503
Node: Word Index744058
Node: Concept Index846361

End Tag Table
